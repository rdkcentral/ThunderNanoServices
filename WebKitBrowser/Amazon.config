set (autostart false)

set(preconditions Graphics Internet)

map()
    kv(outofprocess true)
    if(PLUGIN_AMAZON_USER)
        kv(user ${PLUGIN_AMAZON_USER})
    endif()
    if(PLUGIN_AMAZON_GROUP)
        kv(group ${PLUGIN_AMAZON_GROUP})
    endif()
end()
ans(rootobject)

map()
    kv(url ${PLUGIN_AMAZON_STARTURL})
    kv(useragent ${PLUGIN_AMAZON_USERAGENT})
    kv(injectedbundle "libWPEInjectedBundle${CMAKE_SHARED_LIBRARY_SUFFIX}")
    kv(transparent ${PLUGIN_AMAZON_TRANSPARENT})
    kv(compositor "noaa")
    kv(inspector "0.0.0.0:9999")
    kv(fps true)
    kv(cursor false)
    key(bundle)
    map()
         key(hawaii)
         map()
         kv(displayWidth 1280)
         kv(displayHeight 720)
         kv(panelWidth 1280)
         kv(panelHeight 720)
         kv(proxyHost "")
         kv(proxyPort 0)
         kv(proxyUsername "")
         kv(proxyPassword "")
         kv(bandwidthEstimateFilePath "/tmp/BandwidthEstimate.txt")

        if (PLUGIN_AMAZON_CADIRECTORYPATH)
            kv(CADirectoryPath ${PLUGIN_AMAZON_CADIRECTORYPATH})    
        else (PLUGIN_AMAZON_CADIRECTORYPATH)
            kv(CADirectoryPath "/etc/ssl/certs/")    
        endif (PLUGIN_AMAZON_CADIRECTORYPATH)

        if (PLUGIN_AMAZON_CABUNDLEFILENAME)
            kv(CABundleFileName ${PLUGIN_AMAZON_CABUNDLEFILENAME})    
        else (PLUGIN_AMAZON_CABUNDLEFILENAME)
            kv(CABundleFileName "ca-certificates.crt")
        endif (PLUGIN_AMAZON_CABUNDLEFILENAME)

         kv(supportsSurroundSound true)
         kv(supportsAudioCodecSwitching true)
         kv(dolbyDigitalAudioPassthroughOnly false)
         kv(supportsHEVC false)
         kv(supportsHEVC10Bits false)
         kv(supportsCVBR true)
         kv(supportsIntraChunkSeeking false)
         kv(hasExternalOutput true)
         kv(hasPlatformVideoNode true)
         kv(supportsCompressedContentEncoding true)
         kv(supportsHexEncodedManifest true)
         kv(hdcpMajorVersion 2)
         kv(hdcpMinorVersion 2)
         kv(supportsUHD false)
         kv(supportsHDR false)
         kv(hdrFlags 0)
         kv(supportsOLED true)

        if (PLUGIN_AMAZON_MANUFACTURER)
            kv(manufacturer ${PLUGIN_AMAZON_MANUFACTURER})    
        else (PLUGIN_AMAZON_MANUFACTURER)
            kv(manufacturer "Broadcom")
        endif (PLUGIN_AMAZON_MANUFACTURER)

        if (PLUGIN_AMAZON_MODELNAME)
            kv(modelName ${PLUGIN_AMAZON_MODELNAME})    
        else (PLUGIN_AMAZON_MODELNAME)
            kv(modelName "2952")
        endif (PLUGIN_AMAZON_MODELNAME)

         kv(platformPackageVersion "")
         kv(deviceMode "")

        if (PLUGIN_AMAZON_DEVICELANGUAGE)
            kv(deviceLanguage ${PLUGIN_AMAZON_DEVICELANGUAGE})    
        else (PLUGIN_AMAZON_DEVICELANGUAGE)
            kv(deviceLanguage "en-US")
        endif (PLUGIN_AMAZON_DEVICELANGUAGE)

        if (PLUGIN_AMAZON_DEVICETYPEID)
            kv(deviceTypeId ${PLUGIN_AMAZON_DEVICETYPEID})    
        else (PLUGIN_AMAZON_DEVICETYPEID)
            kv(deviceTypeId "A71I8788P1ZV8")
        endif (PLUGIN_AMAZON_DEVICETYPEID)

        if (PLUGIN_AMAZON_FIRMWAREVERSION)
            kv(firmwareVersion ${PLUGIN_AMAZON_FIRMWAREVERSION})    
        else (PLUGIN_AMAZON_FIRMWAREVERSION)
            kv(firmwareVersion "1.0")
        endif (PLUGIN_AMAZON_FIRMWAREVERSION)

        if (PLUGIN_AMAZON_CHIPSETNAME)
            kv(chipsetName ${PLUGIN_AMAZON_CHIPSETNAME})    
        else (PLUGIN_AMAZON_CHIPSETNAME)
            kv(chipsetName "BCM2837")
        endif (PLUGIN_AMAZON_CHIPSETNAME)

        if (PLUGIN_AMAZON_ETHERNETDEVICE)
            kv(ethernetDevice ${PLUGIN_AMAZON_ETHERNETDEVICE})    
        else (PLUGIN_AMAZON_ETHERNETDEVICE)
            kv(ethernetDevice "eth0")
        endif (PLUGIN_AMAZON_ETHERNETDEVICE)

         kv(wifiDevice "wlan0")

        if (PLUGIN_AMAZON_FRAGMENTCACHESIZE)
            kv(fragmentCacheSizeMB ${PLUGIN_AMAZON_FRAGMENTCACHESIZE})
        else (PLUGIN_AMAZON_FRAGMENTCACHESIZE)
            kv(fragmentCacheSizeMB "100")
        endif (PLUGIN_AMAZON_FRAGMENTCACHESIZE)

         kv(updateFrequency "30")
         kv(fragmentCacheMountPoint "/tmp/")
         key(overrideBySystem)
            map()

            if (PLUGIN_AMAZON_FIRMWAREVERSION)
                kv(firmwareVersion false)
            else (PLUGIN_AMAZON_FIRMWAREVERSION)
                kv(firmwareVersion true)
            endif (PLUGIN_AMAZON_FIRMWAREVERSION)

            if (PLUGIN_AMAZON_CHIPSETNAME)
                kv(chipsetName false)
            else (PLUGIN_AMAZON_CHIPSETNAME)
                kv(chipsetName true)
            endif (PLUGIN_AMAZON_CHIPSETNAME)

            kv(displayResolution true)
            kv(panelResolution true)
            kv(supportsSurroundSound true)
            kv(dolbyDigitalAudioPassthroughOnly true)
            kv(supportsUHD true)
            kv(supportsHDR true)
            kv(supportsOLED true)
            kv(supportsHEVC true)
            kv(hdcpVersion true)
            end()
         end()
    end()
    kv(touch false)
    kv(msebuffers "audio:2m,video:15m,text:1m")
    kv(memoryprofile ${PLUGIN_AMAZON_MEMORYPROFILE})
    kv(memorypressure ${PLUGIN_AMAZON_MEMORYPRESSURE})
    kv(mediacontenttypesrequiringhardwaresupport ${PLUGIN_WEBKITBROWSER_MEDIA_CONTENT_TYPES_REQUIRING_HARDWARE_SUPPORT})
    kv(mediadiskcache ${PLUGIN_WEBKITBROWSER_MEDIADISKCACHE})
    kv(diskcache ${PLUGIN_WEBKITBROWSER_DISKCACHE})
    kv(xhrcache ${PLUGIN_WEBKITBROWSER_XHRCACHE})
    kv(webgl false)
    kv(windowclose true)
    kv(threadedpainting ${PLUGIN_WEBKITBROWSER_THREADEDPAINTING})
    if(PLUGIN_WEBKITBROWSER_CLIENTIDENTIFIER)
        kv(clientidentifier ${PLUGIN_WEBKITBROWSER_CLIENTIDENTIFIER})
    endif()
    if(PLUGIN_WEBKITBROWSER_LOCALSTORAGE)
        kv(localstorage ${PLUGIN_WEBKITBROWSER_LOCALSTORAGE})
    endif()
    if(PLUGIN_WEBKITBROWSER_COOKIESTORAGE)
        kv(cookiestorage ${PLUGIN_WEBKITBROWSER_COOKIESTORAGE})
    endif()
    if(PLUGIN_WEBKITBROWSER_PSTOFFSET)
        kv(ptsoffset ${PLUGIN_WEBKITBROWSER_PSTOFFSET})
    endif()
    if(PLUGIN_WEBKITBROWSER_ALTERNATIVE_EXEC_PATH)
        kv(execpath ${PLUGIN_WEBKITBROWSER_ALTERNATIVE_EXEC_PATH})
    endif()
    if(PLUGIN_WEBKITBROWSER_HTTP_PROXY)
        kv(proxy ${PLUGIN_WEBKITBROWSER_HTTP_PROXY})
    endif()
    if(PLUGIN_WEBKITBROWSER_HTTP_PROXY_EXCLUSION)
        kv(proxyexclusion ${PLUGIN_WEBKITBROWSER_HTTP_PROXY_EXCLUSION})
    endif()
end()
ans(configuration)

map_append(${configuration} root ${rootobject})

map()
if(PLUGIN_WEBKITBROWSER_ENABLE_JIT)
    kv(useJIT true)
else()
    kv(useJIT false)
endif()
if(PLUGIN_WEBKITBROWSER_ENABLE_DFG)
    kv(useDFG true)
else()
    kv(useDFG false)
endif()
end()
ans(javascriptsettings)
map_append(${configuration} javascript ${javascriptsettings})

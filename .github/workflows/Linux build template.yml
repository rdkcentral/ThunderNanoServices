name: Linux build template

on:
  workflow_call:

jobs:
  ThunderNanoServices:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        build_type: [Debug, Release, MinSizeRel]

    name: Build type - ${{matrix.build_type}}
    steps:
    - name: Install necessary packages
      uses: nick-fields/retry@v2
      with:
        timeout_minutes: 10
        max_attempts: 10
        command: |
          sudo gem install apt-spy2
          sudo apt-spy2 fix --commit --launchpad --country=US
          sudo apt-get update
          sudo apt install python3-pip
          pip install jsonref
          sudo apt install build-essential cmake ninja-build libusb-1.0-0-dev zlib1g-dev libssl-dev

    - name: Checkout Thunder
      uses: actions/checkout@v3
      with:
        path: Thunder
        repository: ${{github.repository_owner}}/Thunder

    - name: Checkout ThunderInterfaces
      uses: actions/checkout@v3
      with:
        path: ThunderInterfaces
        repository: ${{github.repository_owner}}/ThunderInterfaces

    - name: Download artifacts
      uses: actions/download-artifact@v3
      with:
        name: ThunderInterfaces-${{matrix.build_type}}-artifact
        path: ${{matrix.build_type}}

    - name: Unpack files
      run: |
        tar -xvzf ${{matrix.build_type}}/${{matrix.build_type}}.tar.gz
        rm ${{matrix.build_type}}/${{matrix.build_type}}.tar.gz

    - name: Checkout ThunderNanoServices
      uses: actions/checkout@v3
      with:
        path: ThunderNanoServices
        repository: ${{github.repository_owner}}/ThunderNanoServices

    - name: Regex ThunderNanoServices
      if: contains(github.event.pull_request.body, '[Options:')
      id: plugins
      uses: AsasInnab/regex-action@v1
      with:
        regex_pattern: '(?<=\[Options:).*(?=\])'
        regex_flags: 'gim'
        search_string: ${{github.event.pull_request.body}}

    - name: Build ThunderNanoServices
      run: |
        cmake -G Ninja -S ThunderNanoServices -B ${{matrix.build_type}}/build/ThunderNanoServices \
        -DCMAKE_CXX_FLAGS="-Wall -Wextra -Wpedantic -Werror" \
        -DCMAKE_INSTALL_PREFIX="${{matrix.build_type}}/install/usr" \
        -DCMAKE_MODULE_PATH="${PWD}/${{matrix.build_type}}/install/usr/include/WPEFramework/Modules" \
        -DPLUGIN_CECCONTROL=ON \
        -DPLUGIN_COMMANDER=ON \
        -DPLUGIN_DHCPSERVER=ON \
        -DPLUGIN_DIALSERVER=ON \
        -DPLUGIN_DICTIONARY=ON \
        -DPLUGIN_FILETRANSFER=ON \
        -DPLUGIN_IOCONNECTOR=ON \
        -DPLUGIN_INPUTSWITCH=ON \
        -DPLUGIN_NETWORKCONTROL=ON \
        -DPLUGIN_PROCESSMONITOR=ON \
        -DPLUGIN_RESOURCEMONITOR=ON \
        -DPLUGIN_SYSTEMCOMMANDS=ON \
        -DPLUGIN_SWITCHBOARD=ON \
        -DPLUGIN_WEBPROXY=ON \
        -DPLUGIN_WEBSERVER=ON \
        -DPLUGIN_WEBSHELL=ON \
        -DPLUGIN_WIFICONTROL=ON \
        ${{steps.plugins.outputs.first_match}}
        cmake --build ${{matrix.build_type}}/build/ThunderNanoServices --target install

    - name: Tar files
      run: tar -czvf ${{matrix.build_type}}.tar.gz ${{matrix.build_type}}

    - name: Upload
      uses: actions/upload-artifact@v3
      with:
        name: ThunderNanoServices-${{matrix.build_type}}-artifact
        path: ${{matrix.build_type}}.tar.gz

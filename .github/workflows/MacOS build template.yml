name: MacOS build template

on:
  workflow_call:

jobs:
  ThunderNanoServices:

    runs-on: macos-14

    strategy:
      matrix:
        build_type: [Debug, Release, MinSizeRel]

    name: Build type - ${{matrix.build_type}}
    steps:
# --------- Packages & artifacts ---------
    - name: Install necessary packages
      run: |
          brew update
          brew upgrade
          brew install ninja zlib
          python3 -m venv venv
          source venv/bin/activate
          pip install jsonref

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: ThunderInterfaces-${{matrix.build_type}}-artifact
        path: ${{matrix.build_type}}

    - name: Unpack files
      run: |
        tar -xvzf ${{matrix.build_type}}/${{matrix.build_type}}.tar.gz
        rm ${{matrix.build_type}}/${{matrix.build_type}}.tar.gz

# ----- Regex & checkout -----
    - name: Checkout ThunderNanoServices
      uses: actions/checkout@v4
      with:
        path: ThunderNanoServices
        repository: ${{github.repository_owner}}/ThunderNanoServices

    - name: Regex ThunderNanoServices
      if: contains(github.event.pull_request.body, '[Options:')
      id: plugins
      uses: AsasInnab/regex-action@v1
      with:
        regex_pattern: '(?<=\[Options:).*(?=\])'
        regex_flags: 'gim'
        search_string: ${{github.event.pull_request.body}}

# ----- Building & uploading -----
    - name: Build ThunderNanoServices
      run: |
        source venv/bin/activate
        cmake -G Ninja -S ThunderNanoServices -B ${{matrix.build_type}}/build/ThunderNanoServices \
        -DCMAKE_CXX_FLAGS="-Wall -Wextra -Wpedantic -Werror" \
        -DCMAKE_C_FLAGS="-Wall -Wextra -Wpedantic -Werror" \
        -DCMAKE_INSTALL_PREFIX="${{matrix.build_type}}/install/usr" \
        -DCMAKE_MODULE_PATH="${PWD}/${{matrix.build_type}}/install/usr/include/WPEFramework/Modules" \
        -DCMAKE_CXX_STANDARD=11 \
        -DCMAKE_CXX_STANDARD_REQUIRED=ON \
        -DEXAMPLE_COMRPCCLIENT=ON \
        -DPLUGIN_CECCONTROL=OFF \
        -DPLUGIN_COMMANDER=ON \
        -DPLUGIN_CONFIGUPDATEEXAMPLE=ON \
        -DPLUGIN_DHCPSERVER=ON \
        -DPLUGIN_DIALSERVER=ON \
        -DPLUGIN_DICTIONARY=ON \
        -DPLUGIN_FILETRANSFER=ON \
        -DPLUGIN_INPUTSWITCH=ON \
        -DPLUGIN_IOCONNECTOR=ON \
        -DPLUGIN_JSONRPC=ON \
        -DPLUGIN_NETWORKCONTROL=OFF \
        -DPLUGIN_OUTOFPROCESS=ON \
        -DPLUGIN_PROCESSMONITOR=ON \
        -DPLUGIN_RESOURCEMONITOR=ON \
        -DPLUGIN_STATECONTROLLER=ON \
        -DPLUGIN_SWITCHBOARD=ON \
        -DPLUGIN_SYSTEMCOMMANDS=OFF \
        -DPLUGIN_TESTCONTROLLER=ON \
        -DPLUGIN_TESTUTILITY=ON \
        -DPLUGIN_WEBPROXY=ON \
        -DPLUGIN_WEBSERVER=ON \
        -DPLUGIN_WEBSHELL=OFF \
        -DPLUGIN_WIFICONTROL=ON \
        -DSTORE_TEST=ON \
        -DTEST_AUTOMATION_TOOLS=ON \
        ${{steps.plugins.outputs.first_match}}
        cmake --build ${{matrix.build_type}}/build/ThunderNanoServices --target install

    - name: Tar files
      run: tar -czvf ${{matrix.build_type}}.tar.gz ${{matrix.build_type}}

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ThunderNanoServices-${{matrix.build_type}}-artifact
        path: ${{matrix.build_type}}.tar.gz

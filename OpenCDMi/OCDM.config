set (autostart ${PLUGIN_OPENCDMI_AUTOSTART})

set(preconditions Provisioning)

    if (PLUGIN_OPENCDMI_PLAYREADY_NEXUS OR PLUGIN_OPENCDMI_PLAYREADY_NEXUS_SVP OR PLUGIN_OPENCDMI_NAGRA)
set(preconditions ${preconditions} Platform)
endif()

map()
    kv(outofprocess ${PLUGIN_OPENCDMI_OOP})
    if(PLUGIN_OPENCDMI_USER)
        kv(user ${PLUGIN_OPENCDMI_USER})
    endif()
    if(PLUGIN_OPENCDMI_GROUP)
        kv(group ${PLUGIN_OPENCDMI_GROUP})
    endif()
end()
ans(rootobject)

map()
   kv(systems ___array___)
end()
ans(configuration)


if(PLUGIN_OPENCDMI_CLEARKEY)
map()
    kv(name "ClearKey")
    kv(designators "___array___;org.chromium.externalclearkey;org.w3.clearkey")
end()
ans(keysystem)
map_append(${configuration} systems ${keysystem})
endif()

if(PLUGIN_OPENCDMI_PLAYREADY OR PLUGIN_OPENCDMI_PLAYREADY_NEXUS OR PLUGIN_OPENCDMI_PLAYREADY_NEXUS_SVP OR PLUGIN_OPENCDMI_PLAYREADY_VGDRM)
map()
    kv(name "PlayReady")
    kv(designators "com.youtube.playready;com.microsoft.playready;com.netflix.playready")
if(PLUGIN_OPENCDMI_PLAYREADY_METERING_CERTIFICATE)
    key(configuration)
    map()
        kv(metering ${PLUGIN_OPENCDMI_PLAYREADY_METERING_CERTIFICATE})
    end()
else()
    key(configuration)
    map()
        kv(read-dir "${PLUGIN_OCDM_PLAYREADY_READ_DIR}")
        kv(store-location "${PLUGIN_OCDM_PLAYREADY_STORE_LOCATION}")
    end()
endif()
end()
ans(keysystem)
map_append(${configuration} systems ${keysystem})
endif()

if(PLUGIN_OPENCDMI_WIDEVINE OR OPENCDMI_WIDEVINE_NEXUS_SVP)
map()
    kv(name "WideVine")
    kv(designators "___array___;com.widevine.alpha")

    key(configuration)
    map()
        kv(certificate ${PLUGIN_OPENCDMI_WIDEVINE_DEVICE_CERTIFICATE})
        if(PLUGIN_OPENCDMI_WIDEVINE_KEYBOX)
            kv(keybox ${PLUGIN_OPENCDMI_WIDEVINE_KEYBOX})
        endif()
        
    end()
end()
ans(keysystem)
map_append(${configuration} systems ${keysystem})
endif()

if(PLUGIN_OPENCDMI_NAGRA)
map()
    kv(name "NagraSystem")
    kv(designators "___array___;com.nagra.system")
    key(configuration)
    map()
        kv(operatorvault "/tmp/ov.json")
        kv(licensepath "/tmp/licenses")
    end()
end()
ans(keysystem)
map_append(${configuration} systems ${keysystem})
map()
    kv(name "NagraConnect")
    kv(designators "___array___;com.nagra.connect")
end()
ans(keysystem)
map_append(${configuration} systems ${keysystem})
endif()


if(PLUGIN_OPENCDMI_NCAS)
map()
    kv(name "Ncas")
    kv(designators "___array___;com.ncas.alpha")
end()
ans(keysystem)
map_append(${configuration} systems ${keysystem})
endif()

map_append(${configuration} root ${rootobject})
